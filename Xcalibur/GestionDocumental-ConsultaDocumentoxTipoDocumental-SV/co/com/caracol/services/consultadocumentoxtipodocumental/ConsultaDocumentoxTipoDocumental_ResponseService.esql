BROKER SCHEMA co.com.caracol.services.consultadocumentoxtipodocumental

DECLARE ns1 NAMESPACE 'http://www.caracoltv.com.co/gestiondocumental/consultadocumentoxtipodocumental/';

CREATE COMPUTE MODULE ConsultaDocumentoxTipoDocumental_ResponseService
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Copiar cabeceras de respuesta
		SET OutputRoot.MQMD 	= Environment.usr._header.MQMD;
		SET OutputRoot.MQRFH2 	= Environment.usr._header.MQRFH2;
		
		--Declarar variable referencia de entrada
		DECLARE refInp REFERENCE TO InputRoot;
		MOVE refInp LASTCHILD;
		MOVE refInp LASTCHILD;
		
		--Declarar variables
		DECLARE ComandoRespuesta CHARACTER '';	
		DECLARE i INTEGER 1;
		
		IF EXISTS(refInp.*:Response[]) THEN
			--Crear mensaje de salida
			CREATE FIELD OutputRoot.XMLNSC.ns1:ConsultaDocumentoXTipoDocumentalResponse;
			DECLARE refOut REFERENCE TO OutputRoot.XMLNSC.ns1:ConsultaDocumentoXTipoDocumentalResponse;
			
			DECLARE intDocumento INTEGER CARDINALITY(refInp.Response.Result.*[]);   			
			IF (intDocumento = 1) THEN
				SET refOut.IdDocumento			= FIELDVALUE(refInp.Response.Result.Document.id);  
				SET refOut.Nombre				= FIELDVALUE(refInp.Response.Result.Document.name);   
				SET refOut.UltimaRevision		= FIELDVALUE(refInp.Response.Result.Document.LatestRevision); 
				SET refOut.TipoDocumental		= FIELDVALUE(refInp.Response.Result.Document.DocumentType);
				SET refOut.FechaCreacion		= CAST(SUBSTRING(refInp.Response.Result.Document.DateStored FROM 1 FOR 10) AS DATE); 	  
											
				FOR rBodyDocumento AS refInp.Response.Result.Document[] DO  									
					DECLARE intPaginas INTEGER CARDINALITY(rBodyDocumento.Pages.*[]);  	
					IF (intPaginas >= 1) THEN 		
						SET i = 1;	
						--Crear concatenación de KeywordFilterName								
						FOR rBodyPagina AS rBodyDocumento.Pages.Page[] DO  										
							SET refOut.Paginas.Pagina[i].Extension=CAST ( rBodyPagina.extension AS CHARACTER) ;   
							SET refOut.Paginas.Pagina[i].Valor=CAST(rBodyPagina  AS CHARACTER );   												
							SET i = i +1;				
						END FOR;								
					ELSE			
						THROW USER EXCEPTION CATALOG 'CARACOL.EXCEPTION.CUSTOM' MESSAGE 3012 VALUES('CUST::No se encuentraron paginas en el documento'); 					
					END IF;	
					 
					DECLARE intKeyword INTEGER CARDINALITY(rBodyDocumento.Keywords.*[]);	
					IF (intKeyword >= 1) THEN		
						SET i =1;	
						--Crear concatenación de KeywordFilterName								
						FOR rBodyKeyWord AS rBodyDocumento.Keywords.Keyword[] DO 												
							SET refOut.KeyWords.KeyWord[i].Nombre= CAST(rBodyKeyWord.name AS CHARACTER);     
							SET refOut.KeyWords.KeyWord[i].Valor=CAST( rBodyKeyWord AS CHARACTER);    						 						 						 						
							SET i = i +1;  				
						END FOR; 							
					ELSE			
						THROW USER EXCEPTION CATALOG 'CARACOL.EXCEPTION.CUSTOM' MESSAGE 3012 VALUES('CUST::No se encuentra la estructura KeywordFilterName Respuesta Comando 1');	
					END IF;																																													
				END FOR;									
			ELSE			
				THROW USER EXCEPTION CATALOG 'CARACOL.EXCEPTION.CUSTOM' MESSAGE 3012 VALUES('CUST::No se encuentro el documento en onbase');  						
			END IF;   
		ELSE
			THROW USER EXCEPTION CATALOG 'CARACOL.EXCEPTION.CUSTOM' MESSAGE 27 VALUES('CUST::ERROR BACKEND');
		END IF;
		RETURN TRUE;
	END;
END MODULE;
