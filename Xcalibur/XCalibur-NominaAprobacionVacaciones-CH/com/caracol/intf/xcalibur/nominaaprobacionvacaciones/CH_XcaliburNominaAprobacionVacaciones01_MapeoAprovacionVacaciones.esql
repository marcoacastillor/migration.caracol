BROKER SCHEMA com.caracol.intf.xcalibur.nominaaprobacionvacaciones


CREATE COMPUTE MODULE CH_XcaliburNominaAprobacionVacaciones01_MapeoAprobacionVacaciones
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE s12 NAMESPACE 'http://www.w3.org/2003/05/soap-envelope';
		DECLARE eb NAMESPACE 'http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/';
		DECLARE srv NAMESPACE 'http://www.caracoltv.com.co/nomina/xcalibur/aprobacionvacaciones/';
		
		
		SET OutputRoot.Properties = InputRoot.Properties;
		-- Add an MQMD
		CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
		
		CREATE FIELD OutputRoot.XMLNSC.s12:Envelope.s12:Header TYPE Name;
		DECLARE rHeaderO REFERENCE TO OutputRoot.XMLNSC.s12:Envelope.s12:Header;
		DECLARE rHeaderI REFERENCE TO InputRoot.SOAP.Header;
		
		SET rHeaderO.eb:Messaging = rHeaderI.eb:Messaging;
		
		CREATE FIELD OutputRoot.XMLNSC.s12:Envelope.s12:Body.srv:AprobacionVacacionesRequest TYPE Name;
		DECLARE rBodyO REFERENCE TO OutputRoot.XMLNSC.s12:Envelope.s12:Body.srv:AprobacionVacacionesRequest;
		DECLARE rBodyI REFERENCE TO InputRoot.SOAP.Body.srv:AprobacionVacacionesRequest;
		
		SET rBodyO.Compania=rBodyI.Compania;
		IF (rBodyI.Ficha IS NULL) THEN
			SET rBodyO.Ficha=0;				
		ELSE
			SET rBodyO.Ficha=rBodyI.Ficha;
		END IF;			
	  	SET rBodyO.FechaInicioVacaciones=rBodyI.FechaInicioVacaciones;
	  	SET rBodyO.DiasTomar=rBodyI.DiasTomar;
	  	SET rBodyO.ProcedenciaRegistro=rBodyI.ProcedenciaRegistro;
	  	SET rBodyO.Aprobador=rBodyI.Aprobador;
	  	SET rBodyO.FechaAprobacion=rBodyI.FechaAprobacion;
	  	SET rBodyO.ComentarioSolicita=rBodyI.ComentarioSolicita;
	  	SET rBodyO.ComentarioAprobador=rBodyI.ComentarioAprobador;
	  	SET rBodyO.LoginAprobador=rBodyI.LoginAprobador;
	  	SET rBodyO.SolicitudAusenciaId=rBodyI.SolicitudAusenciaId;	  	
		RETURN TRUE;				
	END;


END MODULE;


CREATE COMPUTE MODULE CH_XcaliburNominaAprobacionVacaciones01_MapeoAprovacionVacaciones
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
