BROKER SCHEMA com.caracol.xcalibur.nomina.comprobantenomina


CREATE COMPUTE MODULE SV_NominaComprobanteNomina01_Error
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE s12 NAMESPACE 'http://www.w3.org/2003/05/soap-envelope';		                        
		DECLARE eb NAMESPACE 'http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/';
		DECLARE ns NAMESPACE 'http://www.w3.org/XML/1998/namespace';		
		DECLARE rExceptionList REFERENCE TO InputExceptionList;
		CREATE FIELD Environment.exceptions TYPE Name;		
		DECLARE rEnvironment REFERENCE TO Environment.exceptions;
		DECLARE FICHA CHARACTER;
			
		--admin errores		
		CALL AddExceptionData(rExceptionList,rEnvironment);		
    	SET OutputRoot.Properties = InputRoot.Properties;
    	SET OutputRoot.MQMD= InputLocalEnvironment.mqmd;    	    	
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.s12:Fault.s12:Code.s12:Value 	= rEnvironment.exception[<].number;				
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.s12:Fault.s12:Reason.s12:Text = rEnvironment.exception[<].text;				
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.s12:Fault.s12:Detail.eb:Messaging.eb:ErrorList.eb:Error.eb:Destinatarios  = 'AdministradoresBusIntegracion@caracoltv.com.co';							
	    IF Environment.Variables.Ficha[1] IS NULL OR Environment.Variables.Ficha[1] ='' THEN
	    	SET FICHA=  'SIN FICHA';
	    ELSE
	    	SET FICHA= Environment.Variables.Ficha[1];
	    END IF;	    				    
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.s12:Fault.s12:Detail.eb:Messaging.eb:ErrorList.eb:Error.eb:Mensaje 	= 'Error en Comprobante de Nomina Flujo 1, Ficha NÂ°. ' || FICHA;						
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.s12:Fault.s12:Detail.eb:Messaging.eb:ErrorList.eb:Error.eb:MensajeError = rEnvironment.exception[<].text ;					
		SET OutputLocalEnvironment.mqmd= InputRoot.MQMD;						
		RETURN TRUE;				
	END;
	CREATE PROCEDURE AddExceptionData(IN rExceptionList REFERENCE, IN rEnvironment REFERENCE) BEGIN		
		-- Add some exception data for error and text only
		DECLARE Error INTEGER;
		DECLARE Text CHARACTER;
		DECLARE I INTEGER 1;
		DECLARE K INTEGER;
		DECLARE FaultCode CHARACTER;
		
		-- Set the start point
		DECLARE refExc REFERENCE TO rExceptionList.*[1];	
		excep: WHILE refExc.Number IS NOT NULL DO
			SET Error = refExc.Number;
	
			IF FIELDNAME(refExc) = 'UserException' THEN
				SET Text = SUBSTRING(refExc.Insert.Text FROM 1 FOR 250);
				SET FaultCode = 'BusinessException';
			ELSE
				SET Text = refExc.Text;
				SET FaultCode = 'SystemException';
			END IF;
			
			-- Don't include the "Caught exception and rethrowing message"
			IF Error <> 2230 THEN
				-- Process inserts
				DECLARE Inserts Character;
				DECLARE INS Integer;
				SET Inserts = '';
				-- Are there any inserts for this exception
				IF EXISTS (refExc.Insert[]) THEN
					-- If YES add them to inserts string
				 	SET Inserts = Inserts || COALESCE(refExc.Insert[1].Text,'NULL')|| ' / ';
				 	SET K = 1;
				 	INSERTS: LOOP
						IF CARDINALITY(refExc.Insert[])> K THEN 
							SET Inserts = Inserts || COALESCE(refExc.Insert[K+1].Text,'NULL')|| ' / ';
							-- No more inserts to process
						ELSE 
							LEAVE INSERTS;
						END IF;
						SET K = K+1;
					END LOOP INSERTS;
				END IF;				
				SET rEnvironment.exception[I].exceptionType = FIELDNAME(refExc);
				SET rEnvironment.exception[I].file			= refExc.File;
				SET rEnvironment.exception[I].label 		= refExc.Label;
				SET rEnvironment.exception[I].line 			= refExc.Line;
				SET rEnvironment.exception[I].function 		= refExc.Function;
				SET rEnvironment.exception[I].type	 		= refExc.Type;
				SET rEnvironment.exception[I].name	 		= refExc.Name;
				SET rEnvironment.exception[I].catalog 		= refExc.Catalog;
				SET rEnvironment.exception[I].severity 		= refExc.Severity;
				SET rEnvironment.exception[I].number 		= refExc.Number;
				SET rEnvironment.exception[I].text 			= Text;
				SET rEnvironment.exception[I].inserts		= COALESCE(Inserts, '');
				
				SET I = I + 1;
			END IF;				
			-- Move start to the last child of the field to which it currently points 
			MOVE refExc LASTCHILD;
		END WHILE excep;
		
		SET rEnvironment.FaultCode = FaultCode;
	END;
	CREATE PROCEDURE throw(IN exceptionText CHAR)      -- Throws an exception
	   BEGIN
	      THROW USER EXCEPTION Message 3012 VALUES( exceptionText );
	END; 	
END MODULE;