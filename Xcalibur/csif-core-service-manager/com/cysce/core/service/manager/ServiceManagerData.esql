BROKER SCHEMA com.cysce.core.service.manager

DECLARE CacheCatalogInfo SHARED ROW; -- a shared variable that can be used by instances of a flow

CREATE COMPUTE MODULE ServiceManagerData_ToXMLNSCFormat
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC') PARSE (InputRoot.BLOB.BLOB, InputProperties.Encoding, InputProperties.CodedCharSetId);
		
		RETURN TRUE;
	END;
END MODULE;

CREATE FILTER MODULE ServiceManager_CacheFilter
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE evt NAMESPACE 'http://www.ibm.com/xmlns/prod/websphere/messagebroker/6.1.0/monitoring/event';
		
		DECLARE service CHAR;
		SET service = SUBSTRING(Root.XMLNSC.evt:event.evt:eventPointData.evt:eventData.evt:eventIdentity.evt:eventName BEFORE '.');
		IF CacheCatalogInfo.{service}.ServiceInvocationData.valid IS NOT NULL THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;

END MODULE;

CREATE COMPUTE MODULE ServiceManagerData_SetParams
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE evt NAMESPACE 'http://www.ibm.com/xmlns/prod/websphere/messagebroker/6.1.0/monitoring/event';
		
		SET OutputRoot = InputRoot;
		
		SET OutputLocalEnvironment.ServiceRegistryLookupProperties.Name = SUBSTRING(InputRoot.XMLNSC.evt:event.evt:eventPointData.evt:eventData.evt:eventIdentity.evt:eventName BEFORE '.');
		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ServiceManagerData_SaveInCache
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE evt NAMESPACE 'http://www.ibm.com/xmlns/prod/websphere/messagebroker/6.1.0/monitoring/event';
		
		SET OutputRoot = InputRoot;
		
		DECLARE service CHARACTER SUBSTRING(InputRoot.XMLNSC.evt:event.evt:eventPointData.evt:eventData.evt:eventIdentity.evt:eventName BEFORE '.');
		
		SET CacheCatalogInfo.{service}.ServiceInvocationData = InputLocalEnvironment.ServiceRegistry.Entity;
		
		RETURN TRUE;
	END;
END MODULE;



CREATE COMPUTE MODULE ServiceManagerData_ProcessMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE evt NAMESPACE 'http://www.ibm.com/xmlns/prod/websphere/messagebroker/6.1.0/monitoring/event';		
		DECLARE s12 NAMESPACE 'http://www.w3.org/2003/05/soap-envelope';
		DECLARE eb NAMESPACE 'http://www.cysce.com/csif-msg/ns/v1.0/csif-ms/';
		
		SET OutputRoot.Properties.CodedCharSetId = '1208';
		
		CREATE FIELD OutputRoot.XMLNSC.s12:Envelope.s12:Header.eb:Messaging.eb:CollaborationInfo TYPE Name;
		DECLARE rCollaborationInfo REFERENCE TO OutputRoot.XMLNSC.s12:Envelope.s12:Header.eb:Messaging.eb:CollaborationInfo;
		DECLARE rEventIdentity REFERENCE TO InputRoot.XMLNSC.evt:event.evt:eventPointData.evt:eventData.evt:eventIdentity;
		
		DECLARE service CHARACTER SUBSTRING(rEventIdentity.evt:eventName BEFORE '.');
		
		SET rCollaborationInfo.eb:Service = service;
		
		CREATE FIELD OutputRoot.XMLNSC.s12:Envelope.s12:Header.eb:Messaging.eb:MessageProperties TYPE Name;
		DECLARE rMessageProperties REFERENCE TO OutputRoot.XMLNSC.s12:Envelope.s12:Header.eb:Messaging.eb:MessageProperties;
		
		SET Environment.Variables.Audit[] = (SELECT C FROM CacheCatalogInfo.{service}.ServiceInvocationData.userDefinedProperties[] AS C WHERE C.name = 'ServiceCatalog_SVAudit');
		SET Environment.Variables.Logging[] = (SELECT C FROM CacheCatalogInfo.{service}.ServiceInvocationData.userDefinedProperties[] AS C WHERE C.name = 'ServiceCatalog_SVLogging');

		
		DECLARE I INTEGER 1;		
		SET rMessageProperties.eb:Property[I] = Environment.Variables.Audit.value;
		SET rMessageProperties.eb:Property[I].(XMLNSC.Attribute)name = 'audit';
		SET OutputDestinationList.Destination.MQDestinationList[I].DestinationData.queueName = 'CSIF.CORE.SERVICE.AUDIT';		
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.evt:event = InputRoot.XMLNSC.evt:event;
				
		SET rMessageProperties.eb:Property[I+1] = Environment.Variables.Logging.value;
		SET rMessageProperties.eb:Property[I+1].(XMLNSC.Attribute)name = 'logging';
		SET OutputDestinationList.Destination.MQDestinationList[I+1].DestinationData.queueName = 'CSIF.CORE.SERVICE.LOGGING';
		
		SET OutputRoot.XMLNSC.s12:Envelope.s12:Body.evt:event = InputRoot.XMLNSC.evt:event;
		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ServiceManagerData_WSRR_FAIL
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET OutputRoot.MQMD.Expiry = 1800;
		
		SET OutputRoot.XMLNSC.WSRRConnection.WSRRConnectionStatusCode = 
			InputExceptionList.RecoverableException.RecoverableException.RecoverableException.Insert.Type;
		SET OutputRoot.XMLNSC.WSRRConnection.WSRRConnectionStatus = 
			InputExceptionList.RecoverableException.RecoverableException.RecoverableException.Insert.Text;
		
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;

CREATE COMPUTE MODULE ServiceManagerData_ServiceNotFound
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET OutputRoot.MQMD.Expiry = 1800;
		
		SET OutputRoot.XMLNSC.WSRRConnection.WSRRConnectionStatusCode = 1;
		SET OutputRoot.XMLNSC.WSRRConnection.WSRRConnectionStatus = 
			'Servicio No Encontrado en Catalgo del WSRR';
		
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;