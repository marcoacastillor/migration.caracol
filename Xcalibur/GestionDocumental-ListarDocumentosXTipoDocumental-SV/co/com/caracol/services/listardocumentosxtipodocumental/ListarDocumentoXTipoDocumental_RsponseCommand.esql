BROKER SCHEMA co.com.caracol.services.listardocumentosxtipodocumental


CREATE COMPUTE MODULE ListarDocumentoXTipoDocumental_RsponseCommand
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Copiar cabeceras de respuesta
		SET OutputRoot.MQMD 	= Environment.usr._header.MQMD;
		SET OutputRoot.MQRFH2 	= Environment.usr._header.MQRFH2;
		
		--Declarar variable referencia de entrada
		DECLARE refInp REFERENCE TO InputRoot;
		MOVE refInp LASTCHILD;
		MOVE refInp LASTCHILD;
		
		--Declarar variables
		DECLARE ComandoRespuesta CHARACTER '';	
		DECLARE i,j INTEGER 1;
		
		CREATE FIELD OutputRoot.JSON.Data;
		DECLARE refOut REFERENCE TO OutputRoot.JSON.Data;
		
		IF EXISTS(refInp.*:Response[]) THEN
			FOR rBodyDocumento AS refInp.Response.Result.Document[] DO  
				SET refOut.(JSON.Array)Documento.d[i].IdDocumento			= CAST (rBodyDocumento.id AS INTEGER);  
				SET refOut.(JSON.Array)Documento.d[i].Nombre					= CAST (rBodyDocumento.name AS CHARACTER);   
				SET refOut.(JSON.Array)Documento.d[i].UltimaRevision			= rBodyDocumento.LatestRevision; 
				SET refOut.(JSON.Array)Documento.d[i].TipoDocumental			= CAST( rBodyDocumento.DocumentType AS CHAR);
				SET refOut.(JSON.Array)Documento.d[i].FechaCreacion			= CAST( SUBSTRING(rBodyDocumento.DateStored FROM 1 FOR 10) AS DATE);
				
				--Crear KeyWord 							
				SET j = 1;
				FOR rBodyKeyWord AS rBodyDocumento.Keywords.*[] DO
					SET refOut.(JSON.Array).d[i].KeyWord[j].Nombre	= CAST(rBodyKeyWord.name AS CHARACTER);     
					SET refOut.(JSON.Array).d[i].KeyWord[j].Valor	= CAST(rBodyKeyWord AS CHARACTER);     						 						 						 						
					SET j = j +1;  				
				END FOR; 	
									
				SET i = i +1;
			END FOR;									
		ELSE
			THROW USER EXCEPTION CATALOG 'CARACOL.EXCEPTION.CUSTOM' MESSAGE 27 VALUES('CUST::ERROR BACKEND');
		END IF;
		RETURN TRUE;
	END;
END MODULE;
