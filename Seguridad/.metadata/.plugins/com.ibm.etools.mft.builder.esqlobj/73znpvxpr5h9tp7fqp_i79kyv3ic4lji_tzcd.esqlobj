CREATE COMPUTE MODULE StoreContext_setContext
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		-- Copy the incoming original MQMD
		SET OutputRoot.MQMD = InputRoot.MQMD;
		
		-- Copy MsgId to CorrelId as the Backend reply application would do
		-- This enables the MQGet node in the Reply flow to retrieve the
		-- corresponding store message by CorrelId even if the requestor did
		-- not send the message as a MQSeries request message
		SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId;
		
		-- Se verifica que Header MQRFH2 exista 
		DECLARE mqrfh2Check INT CARDINALITY(InputRoot.MQRFH2[]);
		IF mqrfh2Check < 1 THEN
			CREATE LASTCHILD OF OutputRoot DOMAIN 'MQRFH2';
		ELSE
			SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
		END IF;
		
		IF EXISTS(InputLocalEnvironment.Destination.SOAP[]) THEN
			-- Si la petici贸n es WS
			SET OutputRoot.MQRFH2.usr.esbHeader.serviceData.parentTransactionId = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
			SET OutputRoot.MQRFH2.usr.esbHeader.serviceData.Type ='SOAP';
		ELSEIF EXISTS(InputLocalEnvironment.Destination.HTTP[]) THEN
			-- Si la petici贸n es WS
			SET OutputRoot.MQRFH2.usr.esbHeader.serviceData.parentTransactionId = InputLocalEnvironment.Destination.HTTP.Reply.ReplyIdentifier;	
			SET OutputRoot.MQRFH2.usr.esbHeader.serviceData.Type='HTTP';
		ELSE
			-- Si la petici贸n es MQ
			SET OutputRoot.MQRFH2.usr.esbHeader.serviceData.parentTransactionId = InputRoot.MQMD.MsgId;
			SET OutputRoot.MQRFH2.usr.esbHeader.serviceData.Type='MQ';
		END IF;
		
		-- ReplyToQ donde se debe retornar el mensaje de petici贸n
		SET OutputRoot.MQRFH2.usr.esbHeader.replyTo.address = InputRoot.MQMD.ReplyToQ;
		
		-- Guardar datos de contexto del mensaje del servicio
		-- Datos de usuario que se requieran guardar para uso posterior
		SET OutputRoot.MQRFH2.usr.Context = Environment.Variables.Context;
		
		RETURN TRUE;
	END;
END MODULE;