/**********************************************************************
 *																	  *
 * File Name: ExceptionHandlerSoap11.esql								  *
 *																	  *
 * Purpose:   Manejar excepciones de los servicios.					  *
 * 																	  *
 * Authors:   Germ√°n Torres M.										  *
 *                 													  *
 * Date:      01 January 2010										  *
 * Version:   2.0													  *
 *																	  *
 * @copyright  CYSCE S.A 2007.  All rights reserved.				  *
 * No part of this source may be reproduced, store in a retrival 	  *
 * system, or transmitted, in any form by any means, electronic, 	  *
 * mechanical, photo copying, recording or otherwise, without the 	  *
 * prior written permission of CYSCE S.A							  *
 *																      *
 **********************************************************************/
BROKER SCHEMA com.cysce.core.util.exception.soap11
--  $MQSI Name=Exception Handler MQSI$
--  $MQSI Version=2.0 MQSI$
--  $MQSI Author=CYSCE S.A MQSI$



/***********************************************************************
 * Node Name:		ExceptionHandlerSoap11			                   *
 * Module Name:		ExceptionHandler_BuildException            		   *
 * Description:		Este modulo es para el manejo de errores en los    *
 *                       servicios con soap11.          	   		   *
 *                                                                     *
 * Version		   Date		   Author	   Description                 *
 * =============== =========== =========== ============================*
 * 1.0.0.0         01-Mar-2012 gtorres     The initial version.        *
 * 1.0.0.1     	   09-Mar-2012 gtorres     AddExceptionData.		   *
 * 2.0.0.0		   11-Jul-2015 gtorres     Implementation ebMS		   *         
 *										   							   *			
 ***********************************************************************/
CREATE COMPUTE MODULE ExceptionHandler_BuildException
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		-- Declares namespaces
		DECLARE S11 NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
		DECLARE eb NAMESPACE 'http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/';
		DECLARE ns NAMESPACE 'http://www.w3.org/XML/1998/namespace';
		DECLARE csif NAMESPACE 'http://www.cysce.com/csif-msg/ca/fault/v1.0/';
		
		DECLARE rExceptionList REFERENCE TO InputExceptionList;
		CREATE FIELD Environment.exceptions TYPE Name;
		
		DECLARE rEnvironment REFERENCE TO Environment.exceptions;
		
		CALL com.cysce.core.util.exception.AddExceptionData( rExceptionList, rEnvironment );
		
		-----------------------------------
		-- Construir cabecera ebMS
		-----------------------------------
		-- SignalMessage - MessageInfo
		CREATE FIELD OutputRoot.XMLNSC.S11:Envelope.S11:Header.eb:Messaging.eb:SignalMessage.eb:MessageInfo TYPE Name;
		DECLARE rSgMessageInfo REFERENCE TO OutputRoot.XMLNSC.S11:Envelope.S11:Header.eb:Messaging.eb:SignalMessage.eb:MessageInfo;
		-- SignalMessage - Error
		CREATE FIELD OutputRoot.XMLNSC.S11:Envelope.S11:Header.eb:Messaging.eb:SignalMessage.eb:Error TYPE Name;
		DECLARE rSgError REFERENCE TO OutputRoot.XMLNSC.S11:Envelope.S11:Header.eb:Messaging.eb:SignalMessage.eb:Error;
		-- UserMessage
		DECLARE rUmMessageInfo REFERENCE TO InputRoot.SOAP.Header.eb:Messaging.eb:UserMessage.eb:MessageInfo;
		
		Declare targetFormat CHARACTER;
		SET targetFormat = 'yyyy-MM-dd''T''HH:mm:ss.SSSZZZ';
		
		SET rSgMessageInfo.eb:MessageId 						= COALESCE(rUmMessageInfo.eb:MessageId,UUIDASCHAR);
		SET rSgMessageInfo.eb:Timestamp 						= CAST(CURRENT_GMTTIMESTAMP AS CHARACTER FORMAT targetFormat);
		SET rSgMessageInfo.eb:RefToMessageId 					= rUmMessageInfo.eb:MessageId;
		-- eb:Error/@origin (optional)
		SET rSgError.(XMLNSC.Attribute)origin 					= 'esb';
		-- eb:Error/@category (optional)
		SET rSgError.(XMLNSC.Attribute)category 				= '';
		-- eb:Error/@errorCode (required)
		SET rSgError.(XMLNSC.Attribute)errorCode 				= rEnvironment.exception[<].number;
		-- eb:Error/@severity (required)
		SET rSgError.(XMLNSC.Attribute)severity 				= 'failure';
		-- eb:Error/@refToMessageInError (optional)
		SET rSgError.(XMLNSC.Attribute)refToMessageInError 		= '';
		-- eb:Error/@shortDescription (optional)
		SET rSgError.(XMLNSC.Attribute)shortDescription			= rEnvironment.exception[<].exceptionType;
		-- eb:Error/Description (optional)
		SET rSgError.eb:Description.(XMLNSC.Attribute)ns:lang 	= 'en';
		SET rSgError.eb:Description 							= rEnvironment.exception[<].text;
		-- eb:Error/ErrorDetail (optional)
		IF (rEnvironment.exception[<].exceptionType = 'UserException') THEN
			SET rSgError.eb:ErrorDetail 						= rEnvironment.exception[<].text;
		ELSE
			SET rSgError.eb:ErrorDetail 						= rEnvironment.exception[<].text || ' - ' || rEnvironment.exception[<].inserts;
		END IF;
		
		-----------------------------------
		-- Construit Fault del servicio
		-----------------------------------
		CREATE FIELD OutputRoot.XMLNSC.S11:Envelope.S11:Body.S11:Fault TYPE Name;
		DECLARE rFault REFERENCE TO OutputRoot.XMLNSC.S11:Envelope.S11:Body.S11:Fault;
		
		SET rFault.faultcode  								= 'Server';
		SET rFault.faultstring.(XMLNSC.Attribute)ns:lang 	= 'en';
		SET rFault.faultstring 								= rEnvironment.exception[<].text;
		
		DECLARE rException REFERENCE TO rEnvironment.exception[1];
		CREATE FIELD rFault.detail.csif:messageException.csif:exception TYPE Name;
		DECLARE rExOut REFERENCE TO rFault.detail.csif:messageException.csif:exception[1];
		WHILE LASTMOVE(rException) DO
			CREATE FIELD rExOut.csif:exceptionType 	VALUE rException.exceptionType;
			CREATE FIELD rExOut.csif:file			VALUE rException.file;
			CREATE FIELD rExOut.csif:label 			VALUE rException.label;
			CREATE FIELD rExOut.csif:line 			VALUE rException.line;
			CREATE FIELD rExOut.csif:function 		VALUE rException.function;
			CREATE FIELD rExOut.csif:type	 		VALUE rException.type;
			CREATE FIELD rExOut.csif:name	 		VALUE rException.name;
			CREATE FIELD rExOut.csif:catalog 		VALUE rException.catalog;
			CREATE FIELD rExOut.csif:severity 		VALUE rException.severity;
			CREATE FIELD rExOut.csif:number 		VALUE rException.number;
			CREATE FIELD rExOut.csif:text 			VALUE rException.text;
			CREATE FIELD rExOut.csif:inserts		VALUE rException.inserts;
			
			MOVE rException NEXTSIBLING REPEAT TYPE NAME;
			IF (LASTMOVE(rException)) THEN
				CREATE NEXTSIBLING OF rExOut AS rExOut REPEAT;
			END IF;
		END WHILE; -- while rException
		
		DELETE FIELD rEnvironment;
		
		RETURN TRUE;
	END;
END MODULE;
