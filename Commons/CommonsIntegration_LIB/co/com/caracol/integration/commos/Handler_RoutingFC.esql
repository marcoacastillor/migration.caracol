BROKER SCHEMA co.com.caracol.integration.commos

DECLARE UDP_SERVICE EXTERNAL CHARACTER '';
DECLARE UDP_TRACING EXTERNAL BOOLEAN true;
DECLARE UDP_TONOTIFICATION EXTERNAL CHARACTER '';

DECLARE UDP_OPERATION EXTERNAL CHARACTER '';

DECLARE FACADE_REQ CONSTANT CHARACTER 'FCD_REQ';
DECLARE FACADE_RESP CONSTANT CHARACTER 'FCD_RESP';


CREATE COMPUTE MODULE HandlerModules_RouteFcdREST
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Crear cabeceras de mensaje
		CREATE FIELD OutputRoot.Properties;
		CREATE FIELD OutputRoot.MQMD;
		CREATE FIELD OutputRoot.MQRFH2;
		
		--Crear referencias
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2; 
		
		-- Guardar información para responder a cliente
		SET refMQRFH2.usr.responseREST.replyIdentifier = InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		
		--Guardar datos para auditoria
		SET refMQRFH2.usr.transaction.service 			= UDP_SERVICE;
		SET refMQRFH2.usr.transaction.operation 		= UDP_OPERATION;
		SET refMQRFH2.usr.transaction.traceId 			= FACADE_REQ;
		SET refMQRFH2.usr.transaction.emailNotification = UDP_TRACING;
		SET refMQRFH2.usr.transaction.toNotification 	= UDP_TONOTIFICATION;
		
		--Copiar mensaje completo
		SET OutputRoot.JSON = InputRoot.JSON;
		
		RETURN TRUE;
	END;
END MODULE;



CREATE COMPUTE MODULE HandlerModules_RouteFcdWS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Crear cabeceras de mensaje
		CREATE FIELD OutputRoot.Properties;
		CREATE FIELD OutputRoot.MQMD;
		CREATE FIELD OutputRoot.MQRFH2;
		
		--Crear referencias
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2; 
		
		--Obtener portType y operation del llamado
		DECLARE refContext REFERENCE TO InputLocalEnvironment.SOAP.Envelope.InRequest.*.SOAP.Context;  
		DECLARE portType CHARACTER refContext.portType;
		DECLARE operation CHARACTER refContext.operation;
		
		--ReplyIdentifier para respuesta
		SET refMQRFH2.usr.responseWS.replyIdentifier = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		
		--Guardar datos para auditoria
		SET refMQRFH2.usr.transaction.service 			= UDP_SERVICE;
		SET refMQRFH2.usr.transaction.operation 		= operation;
		SET refMQRFH2.usr.transaction.traceId 			= FACADE_REQ;
		SET refMQRFH2.usr.transaction.emailNotification = UDP_TRACING;
		SET refMQRFH2.usr.transaction.toNotification 	= UDP_TONOTIFICATION;
		SET refMQRFH2.usr.transaction.transactionID		= UUIDASCHAR;
		
		--Obtener nombre de cola para envío de mensaje
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = co.com.caracol.integration.commos.getDestinationByServiceAndOperation(UDP_SERVICE, operation);
		
		--Copiar mensaje completo
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE HandlerModules_ResponseFcdREST
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Copiar cabeceras
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
		
		--Declarar referencia de mensaje de entrada
		DECLARE refMQRFH2 REFERENCE TO InputRoot.MQRFH2;
		
		--Guardar datos para auditoria
		SET refMQRFH2.usr.transaction.traceId 			= FACADE_RESP;
		
		--Copiar replyIdentifer
		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = CAST(refMQRFH2.usr.responseREST.replyIdentifier AS BLOB);
		
		--Copiar mensaje completo
		SET OutputRoot.JSON = InputRoot.JSON;
		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE HandlerModules_ResponseFcdWS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Copiar cabeceras
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
		
		--Declarar referencia de mensaje de entrada
		DECLARE refMQRFH2 REFERENCE TO InputRoot.MQRFH2;
		
		--Guardar datos para auditoria
		SET refMQRFH2.usr.transaction.traceId 			= FACADE_RESP;
		
		--Copiar replyIdentifer
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = CAST(refMQRFH2.usr.responseWS.replyIdentifier AS BLOB);
		
		--Copiar mensaje completo
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		
		RETURN TRUE;
	END;
END MODULE;



