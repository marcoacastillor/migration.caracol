CREATE COMPUTE MODULE SV_CargaPlantillaV4_Quemado
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--TODO: Modificado 03062022
		CALL CopyEntireMessage();
		
		DECLARE s12 NAMESPACE 'http://www.w3.org/2003/05/soap-envelope';
		DECLARE eb NAMESPACE 'http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/';
		DECLARE srv NAMESPACE 'http://www.caracoltv.com.co/TI/correo/cargaplantilla4/';
		DECLARE srv2 NAMESPACE 'http://www.caracoltv.com.co/TI/correo/enviocorreo2/';
		DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
		DECLARE Cuerpo CHAR;				
	    /*
		 * Se declaran la referencia al Header del mensaje de Entrada.
		 *
		 */
	    DECLARE rHeaderI REFERENCE TO InputRoot.XMLNSC.s12:Envelope.s12:Header;	    
	    /*
		 * Se crea el mensaje definido para EnvioCorrreoRequest.
		 *
		 */
	    CREATE FIELD OutputRoot.XMLNSC.s12:Envelope.s12:Body.srv2:EnvioCorreoRequest TYPE Name;
	    DECLARE rBodyO REFERENCE TO OutputRoot.XMLNSC.s12:Envelope.s12:Body.srv2:EnvioCorreoRequest;
	    DECLARE rBodyI REFERENCE TO InputRoot.XMLNSC.s12:Envelope.s12:Body.srv:CargaPlantillaRequest;	  		
		/*
		 * Se declara variable de tipo caracter para transformar la plantilla de BLOB a CHAR.
		 *
		 */
        DECLARE wholeMsgChar CHAR 
        CAST(Environment.BLOB.BLOB AS CHAR CCSID InputRoot.Properties.CodedCharSetId);        
        SET OutputRoot.Properties.CodedCharSetId = '1208';                
        /*
		 * Se asignan los valores de Titulo, Mensajes y Link para reemplazarlos en la trama CHAR del XML de la plantilla.
		 *
		 */ 
		DECLARE NombrePlantilla CHARACTER CAST(InputRoot.XMLNSC.s12:Envelope.s12:Body.srv:CargaPlantillaRequest.Plantilla as Character);				 
		
		IF NombrePlantilla IS NULL OR NombrePlantilla ='' THEN
			 SET OutputLocalEnvironment.Wildcard.WildcardMatch = 'Caracol.html'; 
		ELSE
			SET OutputLocalEnvironment.Wildcard.WildcardMatch = NombrePlantilla;			 
		END IF;			
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;