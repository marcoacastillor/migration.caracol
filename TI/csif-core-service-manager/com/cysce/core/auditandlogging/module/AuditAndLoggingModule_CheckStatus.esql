BROKER SCHEMA com.cysce.core.auditandlogging.module

DECLARE evt NAMESPACE 'http://www.ibm.com/xmlns/prod/websphere/messagebroker/6.1.0/monitoring/event';		
DECLARE s12 NAMESPACE 'http://www.w3.org/2003/05/soap-envelope';
DECLARE eb NAMESPACE 'http://www.cysce.com/csif-msg/ns/v1.0/csif-ms/';

CREATE COMPUTE MODULE AuditAndLoggingModule_CheckStatus
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		DECLARE refHdr REFERENCE TO InputRoot.XMLNSC.s12:Envelope.s12:Header;
		DECLARE refEventPoint REFERENCE TO InputRoot.XMLNSC.s12:Envelope.s12:Body.evt:event.evt:eventPointData;
		DECLARE auditFlag CHARACTER FIELDVALUE(refHdr.eb:Messaging.eb:MessageProperties.eb:Property[1]);
		DECLARE loggingFlag CHARACTER FIELDVALUE(refHdr.eb:Messaging.eb:MessageProperties.eb:Property[2]);
		DECLARE localTransactionId CHARACTER refEventPoint.evt:eventData.evt:eventCorrelation.(XMLNSC.Attribute)evt:localTransactionId;
		DECLARE msgKey CHARACTER '';
		
		IF (loggingFlag = 'false') THEN
			SET Environment.Variables.KEY[] = SELECT C.WMB_MSGKEY FROM Database.dbo.WMB_MSGS AS C WHERE C.LOCAL_TRANSACTION_ID = localTransactionId; 
--			SET msgKey = THE(SELECT ITEM C.WMB_MSGKEY FROM Database.dbo.WMB_MSGS AS C WHERE C.LOCAL_TRANSACTION_ID = localTransactionId);
			DECLARE keyInt INTEGER CARDINALITY(Environment.Variables.KEY[]);
			DECLARE i INTEGER 1;
			WHILE (i <= keyInt)  DO
				SET msgKey = Environment.Variables.KEY[i].WMB_MSGKEY;
				DELETE FROM Database.dbo.WMB_BINARY_DATA AS C WHERE C.WMB_MSGKEY = msgKey;
				COMMIT;
				DELETE FROM Database.dbo.WMB_MSGS AS D WHERE D.WMB_MSGKEY = msgKey;
				COMMIT;
				SET i = i+1;
			END WHILE;
				
		END IF;
		
		IF (auditFlag = 'false') THEN
			SET Environment.Variables.KEY[] = SELECT C.WMB_MSGKEY FROM Database.dbo.WMB_MSGS AS C WHERE C.LOCAL_TRANSACTION_ID = localTransactionId; 
--			SET msgKey = THE(SELECT ITEM C.WMB_MSGKEY FROM Database.dbo.WMB_MSGS AS C WHERE C.LOCAL_TRANSACTION_ID = localTransactionId);
			DECLARE keyInt INTEGER CARDINALITY(Environment.Variables.KEY[]);
			DECLARE i INTEGER 1;
--			SET msgKey = THE(SELECT ITEM C.WMB_MSGKEY FROM Database.dbo.WMB_MSGS AS C WHERE C.LOCAL_TRANSACTION_ID = localTransactionId);
			WHILE (i <= keyInt) DO
				SET msgKey = Environment.Variables.KEY[i].WMB_MSGKEY;
				DELETE FROM Database.dbo.WMB_BINARY_DATA AS C WHERE C.WMB_MSGKEY = msgKey;
				COMMIT;
	--			UPDATE Database.dbo.WMB_BINARY_DATA AS A SET DATA = '' WHERE A.WMB_MSGKEY = msgKey;
				UPDATE Database.dbo.WMB_MSGS AS B SET HAS_BITSTREAM = 'N' WHERE B.WMB_MSGKEY = msgKey;
				COMMIT;
				SET i = i+1;
			END WHILE;
			
		END IF;	
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
