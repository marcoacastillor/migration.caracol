CREATE COMPUTE MODULE Seguridad_ValidarToken_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage(); 
		
		DECLARE valido BOOLEAN;
		SET valido=OutputRoot.JSON.Data.Valido;
		IF valido=false THEN								
			SET OutputLocalEnvironment.Destination.HTTP."X-Original-HTTP-Status-Code"=401;	
			SET OutputRoot.JSON.Data.Error = 'Token Invalida';
			PROPAGATE TO TERMINAL 'out1' DELETE NONE;
			RETURN FALSE;
		ELSEIF valido THEN			
			PROPAGATE TO TERMINAL 'out' DELETE NONE;
			RETURN FALSE;
		ELSEIF valido='true' THEN			
			PROPAGATE TO TERMINAL 'out' DELETE NONE;
			RETURN FALSE;
		ELSEIF valido='false' THEN			
			SET OutputLocalEnvironment.Destination.HTTP."X-Original-HTTP-Status-Code"=401;	
			SET OutputRoot.JSON.Data.Error = 'Token Invalida';
			PROPAGATE TO TERMINAL 'out1' DELETE NONE;
			RETURN FALSE;
			
		ELSE
		    SET OutputLocalEnvironment.Destination.HTTP."X-Original-HTTP-Status-Code"=401;	
			SET OutputRoot.JSON.Data.Error = 'Token Invalida';
			PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		END IF;	
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;